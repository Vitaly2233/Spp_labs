import math

# 33
# Даны действительные числа х , у . Получить;
# а) шах (х, у)\
# б) min<*, у);
# в) шах (х, у), min (х, у).
print("33------------")
print("а)")
x = int(input("x = "))
y = int(input("y = "))
if x > y:
    print("max = x = ", x)
elif y > x:
    print("max = y = ", y)
print("б)")
if x < y:
    print("min = x = ", x)
else:
    print("min = y = ", y)
print("в)")
if x > y:
    print("max = x = ", x)
    print("min = y = ", y)
elif y > x:
    print("max = y = ", y)
    print("min = x = ", x)

# 43
# Даны три действительные числа. Возвести в квадрат те из них, значения которых неотрицательны
print("43------------")
const1 = int(input("Число 1 = "))
const2 = int(input("Число 2 = "))
const3 = int(input("Число 3 = "))
if const1 > 0:
    print("Число 1 в квадрате = ", pow(const1, 2))
if const2 > 0:
    print("Число 2 в квадрате = ", pow(const2, 2))
if const3 > 0:
    print("Число 3 в квадрате = ", pow(const3, 2))

# 53
# Даны действительные числа a, ft, с, d, г, /, g 9 к.
# Известно, что точки (е, /) и (g, Л) различны. Известно
# также, что точки (a, ft) и (с, d) не лежат на прямой /,
# проходящей через точки (е} f) и (g, А). Прямая / разбивает координатную плоскость на две полуплоскости. Выяснить, верно ли, что точки (a, ft) и (с, d) принадлежат
# одной и той же полуплоскости **■).

print("53------------")
a = int(input("a = "))
b = int(input("b = "))
c = int(input("c = "))
d = int(input("d = "))
e = int(input("e = "))
f = int(input("f = "))
g = int(input("g = "))
h = int(input("h = "))

f = (x - e) * (h - f) - (y - f) * (g - e)

f1 = (a - e) * (h - f) - (b - f) * (g - e)

f2 = (c - e) * (h - f) - (d - f) * (g - e)

if ((f1 > 0) and (f2 > 0)) or ((f1 < 0) and (f2 < 0)):
    print("Да, приналежат")
else:
    print("Нет, не пренадлежат")


# 34
# аны действительные числа х, у , 2. Получить:
# а) та х (х , у , г);
# б) шт(дс, у, г), max (я, у , 2)
print("34------------")

x = int(input("x = "))
y = int(input("y = "))
z = int(input("z = "))
if (x >= y) and (x >= z):
    max = x
elif (y >= x) and (y >= z):
    max = y
elif (z >= y) and (z >= x):
    max = z
print("max = ", max)
if (x <= y) and (x <= z):
    min = x
elif (y <= x) and (y <= z):
    min = y
elif (z <= y) and (z <= x):
    min = z
print("min = ", min)

# 44
# сли сумма трех попарно различных действительных чисел х, у , z меньше единицы, то наименьшее из
# этих трех чисел заменить полусуммой двух других; в противном случае заменить меньшее из х и у полусуммой
# двух оставшихся значений.

print("44------------")
x = int(input("x = "))
y = int(input("y = "))
z = int(input("z = "))

if x + y + z < 100:

    if (x < y) and (x < z):
        x = (y + z) / 2
    elif y < z:
        y = (x + z) / 2
    else:
        z = (x + y) / 2
else:
    if x < y:
        x = (y + z) / 2
    else:
        y = (x + z) / 2


# 54
# Даны действительные числа х19 Л'2, х3, у и у2> у 3.
# Принадлежит ли начало координат треугольнику с вершинами (х19 уг)9 (*2, у2), (х3, г/3)?

print("54------------")

# 35
# . Даны действительные числа х, у , 2. Вычислить:
# а) n ia x (* + r/-f2, лгг/2);
# б) min2(x + y + 2/2, лт/г) + 1.
print("35------------")
x = int(input("x = "))
y = int(input("y = "))
z = int(input("z = "))
print("a)")

if x + y + z > x * y * z:
    print("Максимальное x + y + z: ", x + y + z)
else:
    print("максимальное x * y * z: ", x * y * z)
print("b)")
if x + y + z / 2 > x * y * z:
    min = x * y * z
else:
    min = x + y + z / 2
print("Минимальное: ", pow(min, 2) + 1)


# 45
# Даны действительные числа а, Ь, с, d. Если
# то каждое число заменить наибольшим из
# них; если а > Ъ > с > d, то числа оставить без изменения;
# в противном случае все числа заменяются их квадратами.
print("45------------")
a = int(input("a = "))
b = int(input("b = "))
c = int(input("c = "))
d = int(input("d = "))
array = [a, b, c, d]
if (a <= b) and (b <= c) and (c <= d):
    max = array[0]
    # max foundation
    for i in array:
        if i > max:
            max = i
    # adding for every number
    a = array[0]
    b = array[1]
    c = array[2]
    d = array[3]
    print("Добавили к каждой переменной")
elif (a > b) and (b > c) and (c > d):
    print("Оставили как есть")


# 55
# даны действительные положительные числа a, b,
# с, d. Выяснить, можно ли прямоугольник со сторонами
# a, b, уместить внутри прямоугольника со сторонами
# с, d так, чтобы каждая из сторон одного прямоугольника
# была параллельна или перпендикулярна каждой стороне
# второго прямоугольника.
print("55------------")
a = int(input("a = "))
b = int(input("b = "))
c = int(input("c = "))

if ((a < c) and (b < d)) or ((a < d) and (b < c)):
    print("Да, можно уместить внутри прямоугольника")
else:
    print("Нельзя")

# 36
# Даны действительные числа а, Ь, с. Проверить,
# выполняются ли неравенства а < Б < с
print("36------------")
a = int(input("a = "))
b = int(input("b = "))
c = int(input("c = "))

if (a < b) and (b < c):
    print("Неравенства выполняются")
else:
    print("неравенство не выполняется")


# ----------------------------------------------------------Part 2. FIGHT!!!!

# 61
# Дано действительное число х. Получить целую часть *)
# числа х; затем— число х, округленное до ближайшего целого; затем— число х без дробных цифр.
print("61------------")
x = float(input("x = "))
print("Число Х", x, "Целая часть числа: ", int(x), "Округлене: ", round(x))
# 71
# Дано действительное число а. Вычислить f(ä ), где
# f — периодическая функция с периодом 1.5, совпадающая
# на отрезке [0, 1.5]:
# а) с функцией x^3— 2.25x;
# б) с функцией, график которой изображен на рис, 4.

print("71------------")

# 62
# Определить, является ли данное целое число четным
print("62------------")
a = int(input("a = "))
if a % 2 == 0:
    print("парное")
else:
    print("не парное")
# 72
# . Дано действительное число а. Вычислить f(a), где
# f — периодическая функция с периодом 2, совпадающая на
# отрезке [— 1, 1]:
# а) с функцией — х2 + 1;
# б) с функцией, график которой изображен на рис. 5
print("72------------")


# 63
# пределить, верно ли, что при делении неотрицательного целого числа а на положительное целое число Ь получается остаток, равный одному из двух заданных чисел г
# или s.
print("63------------")
a = int(input("Введите неотрицательное число: "))
b = int(input("Введите положительное число: "))
r = int(input("r = "))
s = int(input("s = "))

if (a % b) == r or (a % b) == s:
    print("Остаток деления равен числу r или s")
else:
    print("остаток не равен")


# 73
# Даны целые числа k , l. Если числа не равны, то
# заменить каждое из них одним и тем же числом, равным
# большему из исходных, а если равны, то заменить числа
# нулями.

print("73------------")
m = int(input("m = "))
n = int(input("n = "))
if m > n:
    n = m
elif n > m:
    m = n
else:
    m = 0
    n = 0
print("m = ", m, " n = ", n)


# 64
# Дано натуральное число п (я > 99). Определить
# число сотен в нем.
print("64------------")
print("а > 99")
a = int(input("a = "))
print("Колличество сотен:", a // 100)

# 74
# Дано натуральное число п (п < 100), определяющее
# возраст человека (в годах). Дать для этого числа наименования «год», «года» или «лет»: например, 1 год, 23 года,
# 45 лет и т. д
print("74------------")
n = int(input("Введите возраст до 100 лет"))

while n <= 100:
    if ((n % 10) == 1) or (n == 11):
        print(n, "год")
    elif ((n % 10) == 2) or ((n % 10) == 3) or ((n % 10) == 4):
        print(n, "года")
    elif (
        ((n % 10) == 5)
        or ((n % 10) == 6)
        or ((n % 10) == 7)
        or ((n % 10) == 8)
        or ((n % 10) == 9)
        or ((n % 10) == 0)
    ):
        print(n, "лет")
# 65
# Дано натуральное число я (п ^ 9 9 ). Выяснить,
# верно ли, что я2 равно кубу суммы цифр числа я
print("65------------")
num = int(input("Введите целое: "))
sqr = pow(n, 2)
sum = 0
while num != 0:
    sum = sum + num % 10
    num = num // 10
if sqr == sum:
    print("равно")
else:
    print("не равно")

# 75
# оказать, что любую целочисленную денежную сумму,
# большую 7 руб., можно выплатить без сдачи трешками
# 15и пятерками. Для данного п > 7 найти такие целые неотрицательные а и Ь, что За + 5b = п.

print("75------------")
n = int(input("n > 7 = "))
if n <= 7:
    a = 1
    b = 1
    while a < n:
        while b < n:
            if (3 * a + 5 * b) == n:
                print("3 * ", a, " + 5 * ", b, " = ", n)
